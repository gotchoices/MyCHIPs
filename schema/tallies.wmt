#Copyright MyCHIPs.org; See license in root of this package
#----------------------------------------------------------------

tabtext mychips.tallies	{Tallies}	{Contains an entry for each tally, which is a record of credit transactions between two trading partners.} [concat {
  {tally_ent	{Tally Entity}		{The ID number of the entity or person this tally belongs to}}
  {tally_seq	{Tally Sequence}	{A unique number among all tallies owned by this entity}}
  {tally_uuid	{Tally UUID}		{A globally unique identifier for this tally}}
  {tally_type	{Tally Type}		{Determines if this entity is typically the creditor (stock) or the debtor (foil) for this tally} {
    {stock	{Stock}			{The entity this tally belongs to is typically the seller/creditor on transactions}}
    {foil	{Foil}			{The entity this tally belongs to is typically the buyer/debtor on transactions}}
  }}
  {tally_date	{Tally Date}		{The date and time this tally was initiated between the parties}}
  {version	{Version}		{A number indicating the format standard this tally adheres to}}
  {revision	{Revision}		{Count of the number of times the tally was revised/counter-offered during negotiation}}
  {comment	{Comment}		{Any notes the user might want to enter regarding this tally}}
  {contract	{Contract}		{The contract governing this tally agreement} {
    {name	{Name}			{The tag name of the governing contract}}
    {host	{Host}			{The host site of the author of the governing contract (default: mychips.org)}}
    {source	{Resource}		{The Resource ID of the governing contract}}
  }}
  {hold_cert	{Holder Certificate}	{Identification data for the entity that owns/holds this tally} {
    {chad	{CHIP Address}		{JSON object describing how/where other users communicate MyCHIPs transactions with you}}
    {date	{Certificate Date}	{Timestamp showing when this certificate data was generated}}
    {name	{Holder Name}		{A record (or array) of the names you are addressed by}}
  }}
  {part_cert	{Partner Certificate}	{Identification data for the other party to this tally}}
  {hold_sig	{Holder Signed}		{The digital signature of the entity that owns/holds this tally}}
  {part_sig	{Partner Signed}	{The digital signature of the other party to this tally}}
  {hold_terms	{Holder Terms}		{The credit terms the tally holder has offered to its partner} {
    {limit	{Credit Limit}		{Maximum amount the partner may become indebted to the tally holder}}
    {call	{Call Period}		{After the holder demands payment of a balance, the partner is allowed this many days to comply}}
  }}
  {part_terms	{Partner Terms}		{The credit terms the partner has offered to the tally holder} {
    {limit	{Credit Limit}		{Maximum amount the tally holder may become indebted to the partner}}
    {call	{Call Period}		{After the partner demands payment of a balance, the tally holder is allowed this many days to comply}}
  }}
  {hold_sets	{Holder Settings}	{The current terms the holder has asserted on the tally}}
  {part_sets	{Partner Settings}	{The current terms the partner has asserted on the tally}}
  {digest	{Digest Hash}		{A digitally encrypted hash indicating a unique but condensed representation of the critical information belonging to the tally.  The originator will sign this hash to make the lift binding.}}

  {target	{Target Balance}	{The ideal balance to accumulate when conducting lifts.  Lifts above this value are subject to the Buy Margin setting.}}
  {reward	{Buy Margin}		{A cost for lifts to go above the target value (0.01 = 1%).  Positive indicates a cost, or disincentive.  Negative means the holder will lose value!}}
  {clutch	{Sell Margin}		{A cost for negative-going lifts, or 'drops' (0.01 = 1%).  Set to 1 to effectively prevent such trades.  Negative means the holder will lose value!}}
  {bound	{Trade Limit}		{The maximum amount of value the tally holder is willing to accrue from lifts}}

  {request	{Request}		{Requested next status for the tally} {
    {{}		{None}			{Nothing to request for status change}}
    {void	{Void}			{One party has requested to negotiation before the tally has been opened}}
    {draft	{Draft}			{One party is suggesting terms for a tally}}
    {open	{Open}			{One party is requesting to open the tally according to the specified terms}}
    {close	{Close}			{One party is requesting to discontinue further trading on this tally}}
  }}
  {status	{Status}		{Current status of the tally record} {
    {void	{Void}			{The tally has been abandoned before being affirmed by both parties}}
    {draft	{Draft}			{The tally has been suggested by one party but not yet accepted by the other party}}
    {open	{Open}			{The tally is affirmed by both parties and can be used for trading chits}}
    {offer	{Offer}			{The tally has been signed by one party and is offered to the other for acceptance}}
    {close	{Close}			{No further trading can occur on this tally}}
  }}
  {closing	{Closing}		{One of the parties has registered a close request on the tally}}
  {part_ent	{Partner Entity}	{The entity id number of the other party to this tally}}
  {net_c	{Good Units}		{Total milliCHIP value of committed chits}}
  {net_pc	{Pending Units}		{Total milliCHIP value of committed and pending chits}}
  {hold_cuid	{Holder CID}		{Cached value of holder's CHIP identity from the holder certificate}}
  {part_cuid	{Partner CID}		{Cached value of partner's CHIP identify from the holder certificate}}
  {hold_agent	{Holder Agent}		{Cached value of holder's agent from the holder certificate}}
  {part_agent	{Partner Agent}		{Cached value of partner's agent from the holder certificate}}
  {chain_conf	{Chain Confirmed}	{The index of the last chit in the chain that has been confirmed with the partner peer (or zero for none)}}
  {chain_stat	{Chain Status}		{The consensus status of the tally} {
    {non	{None}			{There is not yet any known consensus between the tally halves}}
    {aff	{Affirmed}		{The tally foil has chained all known chits and affirmed the ending checksum to the stock}}
    {pen	{Pending}		{The tally stock as chained all know chits and as suggested an ending checksum to the foil}}
    {con	{Consensed}		{The end of chain checksum has been confirmed by the other party}}
    {err	{Error}			{The tally has encountered an irreconcilable error trying to consense with the other side}}
  }}
  {_last_chit	{Last Chit}		{Used internally to create new chit record index numbers}}
} $glob::stampt] -messages {
  {VER		{Bad Tally Version}	{Tally version must be 1 or greater}}
  {TCM		{Bad Tally Contract}	{An open tally must contain a valid tally contract}}
  {UCM		{Bad User Certificate}	{An open tally must contain a user certificate}}
  {PCM		{Bad Partner Certificate}	{An open tally must contain a partner certificate}}
  {USM		{Bad User Signature}	{An open tally must contain a user signature}}
  {PSM		{Bad Partner Signature}	{An open tally must contain a partner signature}}
  {TGT		{Invalid Target}	{Lift target must be less than or equal to the maximum lift amount}}
  {BND		{Invalid Bound}		{Maximum lift boundary must be greater or equal to zero}}
  {RWD		{Bad Reward Margin}	{Lift reward must be between -1 and 1}}
  {CLT		{Bad Clutch Margin}	{Lift clutch must be between -1 and 1}}
  {RCV		{Bad Reward/Clutch}	{If one of reward or clutch is negative, the other must be at least as large positive}}
  {IVR		{Invalid Request}	{Tally request value is not valid}}
  {IVS		{Invalid Status}	{Tally status value is not valid}}
  {NSP		{Same Partner ID}	{Tally partner must be a separate entity}}
  {TNU		{Tally ID Not Unique}	{The chosen tally type and ID is not unique to the system}}
  {UCI		{CHIP User ID}		{An open tally must include a valid user CHIP User ID}}
  {PCI		{Partner CHIP User ID}	{An open tally must include a valid partner CHIP User ID}}
  {UAI		{User Agent ID}		{An open tally must include a valid user agent ID}}
  {PAI		{Partner Agent ID}	{An open tally must include a valid partner agent ID}}
  {IST		{Illegal State Change}	{The executed state transition is not allowed}}
  {ISR		{Illegal State Request}	{The requested state transition is not allowed}}
}

tabtext mychips.tallies_v {Tallies}	{Standard view containing an entry for each tally, which is a record of credit transactions between two trading partners.} {
  {part_addr	{Partner Address}	{The CHIP address (cid:agent) of the partner on this tally}}
  {inside	{Inside}		{The partner entity is also hosted by the same system as the tally owner}}
  {state	{State}			{A computed value indicating the state of progress as the tally goes through its lifecycle} {
    {void	{Void}			{The tally has been abandoned before being affirmed by both parties}}
    {H.offer	{Holder Offer}		{You have signed and offered the tally to your partner}}
    {P.offer	{Partner Offer}		{Your partner has signed and offered the tally to you}}
    {P.draft	{Draft Ready}		{Your partner has affixed his information to the draft and awaits an offer}}
    {open	{Open}			{The tally is now open an can be used for trades}}
    {close	{Closed}		{The tally can no longer be used for trades}}
  }}
  {action	{Action}		{Indicates this tally requires some kind of action on the part of the user, such as accepting, rejecting, confirming, etc.}}
  {liftable	{Liftable}		{Indicates if the tally is eligible to participate in lifts}}
  {net		{Tally Total}		{Total milliCHIP value on the tally, as summed from current chits}}
  {chits	{Chits}			{The total number of chit transactions recorded on the tally}}
  {latest	{Last Chit}		{The date of the latest chit on the tally}}
  {json_core	{JSON Core}		{A JSON representation of the parts of the tally that will be digitally hashed and signed}}
  {json		{JSON}			{A JSON representation of the tally, including the digital hash}}
  {digest_v	{Computed Digest}	{A version of the hash digest computed from scratch each time it is fetched (to be compared to the stored version)}}
  {clean	{Clean}			{Indicates that the stored hash matches the computed hash.  This is an indication that the tally has not been tampered with.}}
  {policy	{Policy}		{A JSON record of the standard lift and drop parameters}}
  {ack_hash	{Ack Digest}		{The hash of the last acknowleged chit in the chain}}
  {chits_p	{Pending Chits}		{Number of chits confirmed and pending}}
  {hold_chad	{Holder Address}	{CHIP address data for the tally holder}}
  {part_chad	{Partner Address}	{CHIP address data for the tally partner}}
  {hold_host	{Holder Host}		{Hostname for connecting to the tally holder}}
  {part_host	{Partner Host}		{Hostname for connecting to the tally partner}}
  {hold_port	{Holder Port}		{Port for connecting to the tally holder}}
  {part_port	{Partner Port}		{Port for connecting to the tally partner}}
  {net_p	{Net Pending}		{Tally CHIP total of confirmed and pending chits}}
  {mag_p	{Magnitude}		{Tally CHIP total absolute value of confirmed and pending chits}}
}

tabtext mychips.tallies_v_me {My Tallies}	{View containing the tallies pertaining to the current user} {
} -messages {
  {GTK		{Generating Tally}	{A database error occurred while generating a tally invitation ticket}}
  {URF		{Unknown Format}	{Unknown format for a tally invitation}}
  {CNF		{Unknown Contract}	{Unable to find a contract for the tally}}
  {TMK		{Bad Key Number}	{The tally invitation must be called for exactly one tally}}
  {TIN		{Tally Invitation}	{Follow link to consider tally}}
  {TIL		{Good Until}		{Invitation expires after this time}}
  {detail	{Tally Details}		{Show all information about the tally}}
  {close	{Close Tally}		{Request that the current tally be closed once its balance reaches zero}}
  {P.draft.valid {Tally Inquiry}	{Someone has responded to your tally invitation, including its own identifying certificate data}}
  {H.offer.offer {Your Offer}		{You have offerred this tally to the other party}}
  {P.offer.offer {Tally Offer}		{This tally is offered to you by the other party}}
  {H.offer.draft {Tally Revised}	{The other party has marked the tally offer for revision}}
  {P.draft.draft {You Revised}		{You have marked the tally offer for revision}}
  {open.open	{Tally Opened}		{The tally has been accepted by both parties and is ready for transactions}}
  {disclose	{Send Certificate}	{Disclose my certificate information to the other partner}}
  {offer	{Offer Tally}		{Propose the tally to the partner}}
  {review	{Review Tally}		{Review the proposed tally}}
  {accept	{Accept Tally}		{Agree to the proposed tally}}
  {revise	{Revise Tally}		{Revise the proposed tally}}
  {reject	{Reject Tally}		{Refuse the proposed tally}}
  {requested	{Tally Requested}	{You have disclosed certificate information and requested to tally}}
  {accepted	{Tally Accepted}	{The tally has been accepted and authorized}}
  {rejected	{Tally Rejected}	{The tally has been refused}}
  {noterms	{No Tally Terms}	{Please specify credit terms before sharing the tally}}
  {sort		{Tally Order}		{Control the order in which tallies are listed}}
  {credit	{Credit}		{Trust is extended for this amount}}
  {risk		{Risk}			{A loss may be incurred for this amount}}
  {invited	{Wants to Tally}	{Requests you to offer a new MyCHIPs tally}}
  {nocert	{Invalid Certificate}	{The partner's certificate is missing or invalid}}
  {invite	{Invite to Tally}	{Create a new invitation to tally for a prospective partner}}
    {invite.reuse	{Reusable}	{Create a tally template that can be reused over again with any number of trading partners}}
    {invite.format	{Format}	{Determines which type of invitation is generated}}
      {invite.format.qr		{qr}	{Return tally invitation as a QR code}}
      {invite.format.link	{link}	{Return tally invitation as deep link Uniform Resource Locator}}
      {invite.format.json	{json}	{Return tally invitation as JSON object}}
  {trade 			{Trade Settings}	{Graphical view of a tally's trading variable settings}}
    {trade.format 		{Graph Format}		{How to return the graph report data}}
      {trade.format.html	{html}			{Return HTML fragment that contains the report}}
      {trade.format.url		{url}			{Return an url link to a web page containing the report}}
    {trade.direct 		{Direct Chits}		{Path showing direct tally payments}}
    {trade.lift 		{Incoming Lifts}	{Path showing credit lifts from the partner}}
    {trade.drop 		{Outgoing Lifts}	{Path showing credit lifts to the partner}}
    {trade.reset 		{Restore Settings}	{Reset display to what is current in the tally}}
    {trade.submit 		{Apply Settings}	{Save the current settings to become operable in the tally}}
  {file 			{Document File}		{Fetch any partner file attachements the referenced tally}}
    {file.format 		{Return Format}		{How to return the graph report data}}
      {file.format.html		{html}			{Return HTML document displaying the file objects}}
      {file.format.json		{json}			{Return file data as JSON object}}
    {file.digest 		{File Digest}		{Specify the base64url hash of a single document file to return}}
  {agree 			{Preview Agreement}	{Generate the tally agreement as a sharable PDF document}}
    {agree.format 		{Agreement Format}	{How to return the tally agreement report data}}
      {agree.format.html	{html}			{Return HTML fragment that contains the report}}
      {agree.format.url		{url}			{Return an url link to a web page containing the report}}
    {agree.data			{Tally Data}		{Parameters from the Tally relevant to the Tally Agreement are set forth below.  These parameters define the Parties and additional terms associated with their Tally Agreement.}}
    {agree.terms.foil		{Foil Terms}		{Terms set forth by Foil Holder and extended to Stock Holder}}
    {agree.terms.stock		{Stock Terms}		{Terms set forth by Stock Holder and extended to Foil Holder}}
    {agree.cert.foil		{Foil Certificate}	{Information identifying the Foil Holder}}
    {agree.cert.stock		{Stock Certificate}	{Information identifying the Stock Holder}}
    {agree.sign			{Agreed By}		{Digital signatures of the Parties}}
    {agree.other		{Other Data}		{More information in the Tally}}
  {launch.title		{Tallies}		{Peer Trading Relationships}}
  {launch.instruct	{Basic Instructions}	{
    <p>Tallies are used to document and track trading agreements between partners.
    <p>You can propose a new tally from the action menu in the Editing pane.
  }}
  {launch.pay		{Send Payment}			{Send a direct payment to this tally partner}}
  {launch.request	{Request Payment}		{Request a direct payment from this tall partner}}
  {launch.detail	{View Tally}			{See more details about this tally}}
  {launch.chits		{Chit History}			{See past and pending chits on this tally}}
  {notify.draft		{Initiate Tally}		{Someone wants to engage with your invitation to open a MyCHIPs tally ledger}}
  {notify.P.offer	{Tally Offer}			{You have received an offer to open a MyCHIPs tally ledger}}
}

tabtext mychips.tally_tries {Tally Retries}	{Table contains information about retries with peers to establish tallies} {
  {ttry_ent	{Tally Entity}		{The entity that owns the tally}}
  {ttry_seq	{Tally Sequence}	{The unique sequence number of the tally}}
  {tries	{Retries}		{How many times the peer server has attempted to act on the state request for this tally}}
  {last		{Last Tried}		{When the last attempt was made to process state changes on this tally}}
}
